name: Buid_KSU

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Clone kernel source
      run: |
        echo "Free space:"
        df -h
        cd ${GITHUB_WORKSPACE}
        mkdir -p ${HOME}/bin
        PATH="${HOME}/bin:${PATH}"
        curl -LSs https://storage.googleapis.com/git-repo-downloads/repo > ${HOME}/bin/repo
        chmod a+x ${HOME}/bin/repo
        git config --global user.email "hubbylei@hubbylei.dynu.net"
        git config --global user.name "hubbylei"
        mkdir ${GITHUB_WORKSPACE}/android-kernel && cd ${GITHUB_WORKSPACE}/android-kernel
        repo init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-android12-5.10-lts
        repo sync -c -j$(nproc)

    - name: Setup KernelSU
      run: |
        cd ${GITHUB_WORKSPACE}/android-kernel
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

    - name: Build Image
      id: build
      run: |
        PATH="${HOME}/bin:${PATH}"
        cd ${GITHUB_WORKSPACE}/android-kernel/common
        git add -A && git commit -a -m "Add KernelSU"
        rm -rf ${GITHUB_WORKSPACE}/android-kernel/.repo
        cd ${GITHUB_WORKSPACE}/android-kernel
        LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Create version
      id: version
      if: steps.build.outputs.status == 'success' && !cancelled()
      run: |
        cd ${GITHUB_WORKSPACE}/android-kernel/common
        VERSION=$(grep "^VERSION = .*$" Makefile | awk '{print $3}')
        PATCHLEVEL=$(grep "^PATCHLEVEL = .*$" Makefile | awk '{print $3}')
        SUBLEVEL=$(grep "^SUBLEVEL = .*$" Makefile | awk '{print $3}')
        Kernel_ver=${VERSION}.${PATCHLEVEL}.${SUBLEVEL}
        echo "kernel_ver=${Kernel_ver}" >> $GITHUB_OUTPUT
        cd ${GITHUB_WORKSPACE}/android-kernel/KernelSU
        KSU_ver=$(($(git rev-list --count HEAD) + 10200))
        echo "KSU_ver=${KSU_ver}" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Generate release tag
      id: tag
      if: steps.version.outputs.status == 'success' && !cancelled()
      run: |
        echo "## :mega:Update content" > release.txt
        echo "![](https://img.shields.io/github/downloads/${{ github.repository }}/Kernel-SU-${{ steps.version.outputs.KSU_ver }}/total?style=flat-square)" >> release.txt
        echo "### Info" >> ${GITHUB_WORKSPACE}/release.txt
        echo "**:minidisc: Kernel: ${{ steps.version.outputs.kernel_ver }}**" >> release.txt
        echo "**:minidisc: Kernel-SU: ${{ steps.version.outputs.KSU_ver }}**" >> release.txt
        touch release.txt
        tag=Kernel-SU-${{ steps.version.outputs.KSU_ver }}
        echo "release_tag=${tag}" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Zip AnyKernel3
      if: steps.version.outputs.status == 'success' && !cancelled()
      run: |
        git clone https://github.com/Kernel-SU/AnyKernel3 ${GITHUB_WORKSPACE}/AnyKernel3
        rm -rf ${GITHUB_WORKSPACE}/AnyKernel3/.git*
        cp ${GITHUB_WORKSPACE}/android-kernel/out/*/dist/Image ${GITHUB_WORKSPACE}/AnyKernel3/
        cd ${GITHUB_WORKSPACE}/AnyKernel3
        zip -r ${GITHUB_WORKSPACE}/AnyKernel3-android12-${{ steps.version.outputs.kernel_ver }}.zip *

    - name: Upload release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: AnyKernel3-android12-${{ steps.version.outputs.kernel_ver }}.zip

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 1

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
